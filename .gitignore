
# Created by https://www.toptal.com/developers/gitignore/api/python,macos,openfoam
# Edit at https://www.toptal.com/developers/gitignore?templates=python,macos,openfoam

#special files
tank.geo
*.msh
tank_venting/constant/polyMesh/*

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### OpenFOAM ###
# Timestep directories
0.*
[1-9]*

# Fields that must get ignored
*/phi*
*/meshPhi*

# Decomposed domain
processor*

# logfiles
log.*
*log

# paraview/ParaFoam
*.foam
*.OpenFOAM
*.pvsm

# mesh data that is no dictionary
constant/polyMesh/points*
constant/polyMesh/faces*
constant/polyMesh/owner*
constant/polyMesh/neighbour*
constant/polyMesh/boundary*
constant/polyMesh/sets
constant/polyMesh/*

# Zones and levels
*Level*
*Zone*

# snappyHexMesh files that are not snappyHexMeshDict
constant/polyMesh/refinementHistory*
constant/polyMesh/surfaceIndex*
constant/triSurface

# function object and post-processing data
forces
postProcessing

# Needed when C++ code is built using the OpenFOAM library, since it does not
# use a "normal" build tool (make, cmake, ..).
lnInclude
*.dep
linux*
Darwin*

#exclude important folders and files:
!0/
!constant/thermophysicalProperties
!constant/turbulenceProperties
!system/
!.gitignore

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
# .env
.env/
.venv/
env/
venv/
ENV/
env.bak/
venv.bak/
pythonenv*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# operating system-related files
# file properties cache/storage on macOS
*.DS_Store
# thumbnail cache on Windows
Thumbs.db

# profiling data
.prof


# End of https://www.toptal.com/developers/gitignore/api/python,macos,openfoam